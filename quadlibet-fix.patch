diff --git a/next.config.js b/next.config.js
new file mode 100644
index 0000000..1111111
--- /dev/null
+++ b/next.config.js
@@
/** @type {import('next').NextConfig} */
const nextConfig = {
  images: {
    remotePatterns: [
      { protocol: 'https', hostname: 'images.unsplash.com' },
      { protocol: 'https', hostname: 'picsum.photos' },
      { protocol: 'https', hostname: 'quadlibet-media.s3.amazonaws.com' }
    ]
  }
};
module.exports = nextConfig;
diff --git a/app/layout.tsx b/app/layout.tsx
new file mode 100644
index 0000000..1111112
--- /dev/null
+++ b/app/layout.tsx
@@
import './globals.css';

export const metadata = {
  title: 'Quadlibét — Official Site',
  description: 'Bronx-born Freestyle. Passion. Legacy.'
};

export default function RootLayout({ children }: { children: React.ReactNode }) {
  return (
    <html lang="en">
      <body className="bg-zinc-950 text-zinc-100">{children}</body>
    </html>
  );
}
diff --git a/app/page.tsx b/app/page.tsx
new file mode 100644
index 0000000..1111113
--- /dev/null
+++ b/app/page.tsx
@@
export default function HomePage() {
  return (
    <main className="max-w-6xl mx-auto px-4 py-16">
      <h1 className="text-3xl md:text-4xl font-extrabold">Quadlibét</h1>
      <p className="mt-2 text-zinc-300">Official site.</p>
    </main>
  );
}
diff --git a/app/music/page.tsx b/app/music/page.tsx
new file mode 100644
index 0000000..1111114
--- /dev/null
+++ b/app/music/page.tsx
@@
'use client';

export default function MusicPage() {
  const artist = 'Quadlibét';
  const tracks = [
    { title: "Take Me I'm Yours" },
    { title: 'Made For Me (Radio)' },
    { title: 'Nothing Left to Say (Freestyle Mix)' },
    { title: "Take Me I'm Yours (Sexy Lady Freestyle Mix)" },
    { title: 'Tainted Love' }
  ];

  const linkFor = (platform: 'spotify'|'apple'|'ytm'|'amazon', q: string) => {
    const term = encodeURIComponent(`(Quadlibét OR Quadlibet) ${q}`);
    switch (platform) {
      case 'spotify': return `https://open.spotify.com/search/${term}`;
      case 'apple':   return `https://music.apple.com/us/search?term=${term}`;
      case 'ytm':     return `https://music.youtube.com/search?q=${term}`;
      case 'amazon':  return `https://music.amazon.com/search/${term}`;
    }
  };

  const placeholderCover =
    "data:image/svg+xml;utf8," +
    encodeURIComponent(`<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 300 300'>
      <rect width='100%' height='100%' fill='#111'/>
      <text x='50%' y='52%' fill='#bbb' font-size='22' text-anchor='middle' font-family='sans-serif'>${artist}</text>
      <text x='50%' y='70%' fill='#666' font-size='14' text-anchor='middle' font-family='sans-serif'>Listen on your platform</text>
    </svg>`);

  return (
    <main className="max-w-6xl mx-auto px-4 py-16">
      <h1 className="text-3xl md:text-4xl font-extrabold">Music</h1>
      <p className="mt-2 text-zinc-300">Stream Quadlibét on your favorite platform. Tap a service below each track.</p>

      <div className="mt-8 grid md:grid-cols-2 gap-6">
        {tracks.map((t) => (
          <article key={t.title} className="rounded-2xl bg-white/5 border border-white/10 p-4 flex gap-4">
            <img src={placeholderCover} alt={`${t.title} cover`} width={72} height={72}
                 className="w-18 h-18 min-w-18 min-h-18 rounded-lg object-cover border border-white/10" />
            <div className="flex-1">
              <h3 className="font-semibold">{t.title}</h3>
              <p className="text-xs text-zinc-400 mt-1">Quadlibét · Available on all major platforms</p>
              <div className="mt-3 flex flex-wrap gap-2">
                <a className="px-3 py-2 rounded-xl bg-[#1DB954]/90 hover:bg-[#1DB954] text-xs font-semibold text-white" href={linkFor('spotify', t.title)} target="_blank" rel="noreferrer">Spotify</a>
                <a className="px-3 py-2 rounded-xl bg-white text-black hover:bg-zinc-200 text-xs font-semibold" href={linkFor('apple', t.title)} target="_blank" rel="noreferrer">Apple Music</a>
                <a className="px-3 py-2 rounded-xl bg-red-600/90 hover:bg-red-600 text-xs font-semibold text-white" href={linkFor('ytm', t.title)} target="_blank" rel="noreferrer">YouTube Music</a>
                <a className="px-3 py-2 rounded-xl bg-amber-500/90 hover:bg-amber-500 text-xs font-semibold text-black" href={linkFor('amazon', t.title)} target="_blank" rel="noreferrer">Amazon Music</a>
              </div>
            </div>
          </article>
        ))}
      </div>
    </main>
  );
}
